<?php
$this->headLink()->appendStylesheet('/js/jquery/plugin/DataTables/css/jquery.dataTables.css')
                 ->appendStylesheet('/js/jquery/plugin/DataTables/extras/ColReorder/css/ColReorder.css')
                 ->appendStylesheet('/js/jquery/plugin/DataTables/extras/ColVis/css/ColVis.css');
                 
 $this->headScript()->appendFile('/js/jquery/plugin/DataTables/js/jquery.dataTables.js')
                    ->appendFile('/js/jquery/plugin/DataTables/extras/ColReorder/js/ColReorder.js')
                    ->appendFile('/js/jquery/plugin/DataTables/extras/ColVis/js/ColVis.js')
                    ->appendFile('/js/jquery/plugin/DataTables/extras/ColumnFilter/js/jquery.dataTables.columnFilter.js');
                    
$sDom = "R";
if($this->chooseColumnVisibility) {
    $sDom .= 'C<"clear">';
}
$sDom .= "lrtip";
                    
?>
<style type="text/css" title="currentStyle">
.clear { clear: both; }
.search_init { color: #999; }
.FixedHeader_Cloned th { background-color: white; }
thead th { text-align: left; }
</style>
        
<script type="text/javascript" charset="utf-8">


$(document).ready( function () {
    $('#list_div').html('<table cellpadding="0" cellspacing="0" border="0" id="main_list"></table>');
    var thead = jQuery('<thead/>');
    var trHeader = jQuery('<tr/>')
    var trFilter = jQuery('<tr/>')
    var bAddFilterRow = false;
    var filterParams = new Array();
    var aoColumns = new Array();

<?php
    $addFilterRow = false;
    foreach($this->columnsInfo as $key => $column):
?>
    trHeader.append(jQuery('<th/>', {'text' : '<?php echo $column['title'];?>'}));
    aoColumns[aoColumns.length] = {
            'mData' : '<?php echo $key;?>'
           ,'bSortable' : <?php echo !array_key_exists('sortable', $column) || $column['sortable'] ? 'true' : 'false';?>
           ,'bVisible'  : <?php echo !array_key_exists('visible', $column) || $column['visible'] ? 'true' : 'false';?>
    };
<?php
        if(array_key_exists('filter', $column) && array_key_exists('type', $column['filter'])) {
            $addFilterRow = true;
        }
    endforeach;
?>

<?php
    if(addFilterRow) :
    ?>
    bAddFilterRow = true;
    <?php    
        foreach($this->columnsInfo as $key => $column) :
            $defText = '';
            $newElement = 'null';
            if(array_key_exists('filter', $column)) {
                if(array_key_exists('def_text', $column['filter'])) {
                    $defText = $column['filter']['def_text'];
                }
                if(array_key_exists('type', $column['filter'])) {
                    switch($column['filter']['type']) {
                        case 'text':
                            $newElement = "{'type': 'text'}";
                            break;
                        case 'select':
                            $values = '[]';
                            if(array_key_exists('values', $column['filter'])) {
                                if(!is_array($column['filter']['values'])) {
                                    $column['filter']['values'] = array($column['filter']['values']);
                                }
                                array_walk($column['filter']['values'], function (&$c){ $c = preg_replace("/'/", "/\\'/", $c); $c = "'".$c."'"; });
                                $values = sprintf("[%s]", join(",", $column['filter']['values']));
                            }
                            $newElement = "{'type': 'select', 'values' : ".$values."}";
                            break;
                    }
                }
            }
?>
    trFilter.append(jQuery('<th/>', {'text' : '<?php echo $defText; ?>'}));
    filterParams[filterParams.length] = <?php echo $newElement; ?>;
<?php
        endforeach;
    endif;
?>
    
    thead.append(trHeader);
    if(bAddFilterRow) {
        thead.append(trFilter);
    }
    $('#main_list').append(thead);


    var oCache = {
        'iCacheLower': -1
    };
         
    function fnSetKey( aoData, sKey, mValue )
    {
        for ( var i=0, iLen=aoData.length ; i<iLen ; i++ ) {
            if ( aoData[i].name == sKey ) {
                aoData[i].value = mValue;
            }
        }
    }
     
    function fnGetKey( aoData, sKey )
    {
        for ( var i=0, iLen=aoData.length ; i<iLen ; i++ ) {
            if ( aoData[i].name == sKey ) {
                return aoData[i].value;
            }
        }
        return null;
    }
     
    function fnDataTablesPipeline ( sSource, aoData, fnCallback )
    {
        var iPipe = 5; /* Ajust the pipe size */
         
        var bNeedServer = false;
        var sEcho = fnGetKey(aoData, "sEcho");
        var iRequestStart = fnGetKey(aoData, "iDisplayStart");
        var iRequestLength = parseInt(fnGetKey(aoData, "iDisplayLength"));
        var iRequestEnd = iRequestStart + iRequestLength;
        oCache.iDisplayStart = iRequestStart;
         
        /* outside pipeline? */
        if ( oCache.iCacheLower < 0 || iRequestStart < oCache.iCacheLower || iRequestEnd > oCache.iCacheUpper ) {
            bNeedServer = true;
        }
         
        /* sorting etc changed? */
        if ( oCache.lastRequest && !bNeedServer ) {
            for( var i=0, iLen=aoData.length ; i<iLen ; i++ ) {
                if ( aoData[i].name != "iDisplayStart" && aoData[i].name != "iDisplayLength" && aoData[i].name != "sEcho" ) {
                    if (undefined == oCache.lastRequest[i] || aoData[i].value != oCache.lastRequest[i].value ) {
                        bNeedServer = true;
                        break;
                    }
                }
            }
        }
         
        /* Store the request for checking next time around */
        oCache.lastRequest = aoData.slice();
         
        if ( bNeedServer ) {
            if ( iRequestStart < oCache.iCacheLower ) {
                iRequestStart = iRequestStart - (iRequestLength*(iPipe-1));
                if ( iRequestStart < 0 ) {
                    iRequestStart = 0;
                }
            }
             
            oCache.iCacheLower = iRequestStart;
            oCache.iCacheUpper = iRequestStart + (iRequestLength * iPipe);
            oCache.iDisplayLength = fnGetKey( aoData, "iDisplayLength" );
            fnSetKey( aoData, "iDisplayStart", iRequestStart );
            fnSetKey( aoData, "iDisplayLength", iRequestLength*iPipe );
             
            $.getJSON( sSource, aoData, function (json) {
                /* Callback processing */
                oCache.lastJson = jQuery.extend(true, {}, json);
                 
                if ( oCache.iCacheLower != oCache.iDisplayStart ) {
                    json.aaData.splice( 0, oCache.iDisplayStart-oCache.iCacheLower );
                }
                json.aaData.splice( oCache.iDisplayLength, json.aaData.length );
                 
                fnCallback(json)
            } );
        }
        else {
            json = jQuery.extend(true, {}, oCache.lastJson);
            json.sEcho = sEcho; /* Update the echo for each response */
            json.aaData.splice( 0, iRequestStart-oCache.iCacheLower );
            json.aaData.splice( iRequestLength, json.aaData.length );
            fnCallback(json);
            return;
        }
    }
             
    
    var oTable = $('#main_list').dataTable( {
         'sPaginationType'  : 'full_numbers'
        ,'iDisplayLength'   : '50'
        ,'sDom'             : '<?php echo $sDom; ?>'
        ,'bSortCellsTop'    : true
        ,'bProcessing'      : true
        ,'bServerSide'      : true
        ,'bServerMethod'    : 'POST'
        ,'sAjaxSource'      : '/test.php'
        ,'fnServerData'     : fnDataTablesPipeline
        ,'fnServerParams'   : function ( aoData ) {
            aoData.push({
                 'name' : "param_1"
                ,'value': "param_1_value"
            });
            aoData.push({
                'name' : "param_2"
               ,'value': "param_2_value"
           });
        }
        ,'aoColumns'        : aoColumns
     
    });
    if(bAddFilterRow) {
        oTable.columnFilter({
             'sPlaceHolder' : 'head:after'
            ,'aoColumns'    : filterParams
        });
    }
} );
</script>                 

<div id="list_div">
</div>